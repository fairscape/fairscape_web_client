// src/pages/EvidenceGraphPage.tsx
import React, { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import styled from "styled-components";
import axios from "axios";

// Types and Components
import { RawGraphData } from "../types";
import EvidenceGraphViewer from "../components/EvidenceGraph/EvidenceGraphViewer";
import LoadingSpinner from "../components/common/LoadingSpinner";
import Alert from "../components/common/Alert";

// Styled Components
const Container = styled.div`
  max-width: 95%;
  width: 95%;
  margin: 0 auto;
  padding: 20px;
  background-color: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
`;

const Header = styled.header`
  margin-bottom: 20px;
  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};
  padding-bottom: 15px;
  background-color: ${({ theme }) => theme.colors.background};
  padding: 20px;
  border-radius: 5px;
`;

const PageTitle = styled.h1`
  font-size: 24px;
  margin-bottom: 5px;
  color: ${({ theme }) => theme.colors.primary};
`;

const ArkIdDisplay = styled.div`
  color: ${({ theme }) => theme.colors.textSecondary};
  font-family: monospace;
  margin-top: 10px;
`;

const GraphContainer = styled.div`
  width: 100%;
  height: 75vh;
  margin: 0 auto;
`;

const Footer = styled.footer`
  margin-top: 30px;
  padding: 20px;
  background-color: ${({ theme }) => theme.colors.background};
  border-top: 1px solid ${({ theme }) => theme.colors.border};
  border-radius: 5px;
  font-size: 14px;
  color: ${({ theme }) => theme.colors.textSecondary};
  text-align: center;

  a {
    color: ${({ theme }) => theme.colors.primary};
    text-decoration: none;

    &:hover {
      text-decoration: underline;
    }
  }
`;

const EvidenceGraphPage: React.FC = () => {
  const { arkId } = useParams<{ arkId: string }>();
  const [evidenceGraph, setEvidenceGraph] = useState<RawGraphData | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      setError(null);

      try {
        // For now, hard-coding to use the sample evidence graph
        // In a real implementation, this would fetch based on the arkId
        const graphResponse = await axios.get<RawGraphData>(
          "/data/evidence-graph.json"
        );
        setEvidenceGraph(graphResponse.data);
      } catch (err: any) {
        console.error("Error loading evidence graph:", err);
        setError(`Failed to load evidence graph: ${err.message}`);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, [arkId]);

  // Update Document Title
  useEffect(() => {
    document.title = `Evidence Graph ${
      arkId ? `for ${arkId}` : ""
    } - FAIRSCAPE`;
  }, [arkId]);

  const renderContent = () => {
    if (loading) return <LoadingSpinner />;
    if (error)
      return <Alert type="error" title="Error Loading Data" message={error} />;
    if (!evidenceGraph)
      return (
        <Alert
          type="info"
          title="No Evidence Graph"
          message="Evidence graph data is not available for this item."
        />
      );

    return (
      <GraphContainer>
        <EvidenceGraphViewer evidenceGraphData={evidenceGraph} />
      </GraphContainer>
    );
  };

  return (
    <Container>
      <Header>
        <PageTitle>Evidence Graph</PageTitle>
        {arkId && <ArkIdDisplay>ARK: {arkId}</ArkIdDisplay>}
      </Header>

      {renderContent()}

      <Footer>
        Metadata & Provenance: This metadata and provenance were generated by
        the FAIRSCAPE AI-readiness platform (Al Manir, et al. a2024, BioRXiv
        2024.12.23.629818;
        <a
          href="https://doi.org/10.1101/2024.12.23.629818"
          target="_blank"
          rel="noopener noreferrer"
        >
          https://doi.org/10.1101/2024.12.23.629818
        </a>
        ).
      </Footer>
    </Container>
  );
};

export default EvidenceGraphPage;
